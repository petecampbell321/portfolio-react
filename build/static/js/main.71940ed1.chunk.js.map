{"version":3,"sources":["util/projData.js","components/Project/Project.js","components/ProjectList/ProjectList.js","components/Landing/Landing.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","id","name","type","desc","Project","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","Component","ProjectList","list","projData","map","projectData","components_Project_Project","key","Landing","data-name","xmlns","viewBox","d","cx","cy","r","App","components_Landing_Landing","components_ProjectList_ProjectList","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71940ed1.chunk.js","sourcesContent":["let projData = [\n    {\n        'id' : 1,\n        'name' : 'Harron Framing',\n        'type' : ['Website Design', 'Website Development', 'Ad Design'],\n        'desc' : `Harron Framing is a local business that specialise in\n            framing anything from artwork to sports jerseys. I designed\n            and developed a website for them to help them with their online\n            presence. I also produced an advertisment for them to place in\n            a local news magazine.`\n    },\n    {\n        'id' : 2,\n        'name' : 'Allied Financial Consultancy',\n        'type' : ['Website Design', 'Website Development'],\n        'desc' : `A website that I designed and developed for Allied Financial\n            Consultancy so that people could go online and learn more about\n            their business and what they offer.`\n    },\n    {\n        'id' : 3,\n        'name' : 'This Website!',\n        'type' : ['Website Design', 'Website Development'],\n        'desc' : `This website was built using React to dynamically generate\n                content based on project objects that contained the required data.`\n        \n    },\n    {\n        'id' : 4,\n        'name' : 'Test Project',\n        'type' : ['Test'],\n        'desc' : 'This is a test project!!'\n        \n    },\n    {\n        'id' : 5,\n        'name' : 'Test Project',\n        'type' : ['Test'],\n        'desc' : 'This is a test project!!'\n        \n    },\n    {\n        'id' : 6,\n        'name' : 'Test Project',\n        'type' : ['Test'],\n        'desc' : 'This is a test project!!'\n        \n    }\n]\n\nmodule.exports = projData;","import React, { Component } from 'react';\n\nimport './Project.css';\n\nclass Project extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.id = props.id;\n\t\tthis.name = props.name;\n\t\tthis.type = props.type;\n\t\tthis.desc= props.desc;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"project-container\">\n\t\t\t\t<div className=\"project-header\">\n\t\t\t\t\t<h1>{this.name}</h1>\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"project-desc\">\n\t\t\t\t\t<p>{this.desc}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport Project from '../Project/Project';\nimport projData from '../../util/projData';\n\nimport './ProjectList.css';\n\nclass ProjectList extends Component {\n\trender() {\n\t\tconst list = projData.map(projectData => (\n\t\t\t<Project \n\t\t\t\tkey={projectData.id}\n\t\t\t\tname={projectData.name}\n\t\t\t\ttype={projectData.type}\n\t\t\t\tdesc={projectData.desc}\n\t\t\t/>\t\n\t\t));\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1 className=\"section-title\">My Projects</h1>\n\t\t\t\t<div className=\"list-container\">\n\t\t\t\t\t{list}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport './Landing.css';\n\nclass Landing extends Component {\n    render() {\n        return(\n            <div className=\"landing-container\">\n                <div className=\"landing-content\">\n                    <svg \n                        id=\"logo\" \n                        data-name=\"Layer 1\" \n                        xmlns=\"http://www.w3.org/2000/svg\" \n                        viewBox=\"0 0 982 500\"\n                    >\n                        <defs>\n                            <style>\n                                { `.cls-1{fill:#53c9b4;}` }\n                                { `.cls-2{fill:#c95a36;}` }\n                            </style>\n                        </defs>\n                        <title>\n                            Artboard 1\n                        </title>\n                        <path \n                            id=\"Ellipse_Green\" \n                            data-name=\"Ellipse Green\" \n                            className=\"cls-1\" \n                            d=\"M254.6,9.08C385.16,9.08,491,114.9,491,245.44S385.16,481.8,254.6,481.8,18.2,376,18.2,245.44,124,9.08,254.6,9.08Z\"\n                        />\n                        <circle \n                            id=\"Ellipse_Orange_\" \n                            data-name=\"Ellipse Orange \" \n                            className=\"cls-2\" \n                            cx=\"727.41\" \n                            cy=\"245.45\" \n                            r=\"236.41\"\n                        />\n                    </svg>\n                    <p>Hi! I'm <span className=\"heavy-font\">Pete Campbell</span>!</p>\n                    <p><span className=\"green-font heavy-font\">Designer</span> & <span className=\"orange-font heavy-font\">Developer</span></p>\n                    <p className=\"small-font\">(Of this site and some others)</p>\n                </div>\t\t\t\n            </div>\n        );\n    }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport ProjectList from '../ProjectList/ProjectList'\nimport Landing from '../Landing/Landing';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Landing />\n        <ProjectList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n//import Admin from './pages/Admin/Admin';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}